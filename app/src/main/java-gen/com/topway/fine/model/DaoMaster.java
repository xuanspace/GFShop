package com.topway.fine.model;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.topway.fine.model.TableDao;
import com.topway.fine.model.SequnceDao;
import com.topway.fine.model.CompanyDao;
import com.topway.fine.model.ZoneDao;
import com.topway.fine.model.CategoryDao;
import com.topway.fine.model.CategoryGroupDao;
import com.topway.fine.model.BrandDao;
import com.topway.fine.model.GenericDao;
import com.topway.fine.model.EngineDao;
import com.topway.fine.model.SerieEnginesDao;
import com.topway.fine.model.ManufacturerDao;
import com.topway.fine.model.SerieDao;
import com.topway.fine.model.PartDao;
import com.topway.fine.model.ProductDao;
import com.topway.fine.model.SupplierDao;
import com.topway.fine.model.ContactDao;
import com.topway.fine.model.LinkDao;
import com.topway.fine.model.PhotoDao;
import com.topway.fine.model.DictionaryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        TableDao.createTable(db, ifNotExists);
        SequnceDao.createTable(db, ifNotExists);
        CompanyDao.createTable(db, ifNotExists);
        ZoneDao.createTable(db, ifNotExists);
        CategoryDao.createTable(db, ifNotExists);
        CategoryGroupDao.createTable(db, ifNotExists);
        BrandDao.createTable(db, ifNotExists);
        GenericDao.createTable(db, ifNotExists);
        EngineDao.createTable(db, ifNotExists);
        SerieEnginesDao.createTable(db, ifNotExists);
        ManufacturerDao.createTable(db, ifNotExists);
        SerieDao.createTable(db, ifNotExists);
        PartDao.createTable(db, ifNotExists);
        ProductDao.createTable(db, ifNotExists);
        SupplierDao.createTable(db, ifNotExists);
        ContactDao.createTable(db, ifNotExists);
        LinkDao.createTable(db, ifNotExists);
        PhotoDao.createTable(db, ifNotExists);
        DictionaryDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        TableDao.dropTable(db, ifExists);
        SequnceDao.dropTable(db, ifExists);
        CompanyDao.dropTable(db, ifExists);
        ZoneDao.dropTable(db, ifExists);
        CategoryDao.dropTable(db, ifExists);
        CategoryGroupDao.dropTable(db, ifExists);
        BrandDao.dropTable(db, ifExists);
        GenericDao.dropTable(db, ifExists);
        EngineDao.dropTable(db, ifExists);
        SerieEnginesDao.dropTable(db, ifExists);
        ManufacturerDao.dropTable(db, ifExists);
        SerieDao.dropTable(db, ifExists);
        PartDao.dropTable(db, ifExists);
        ProductDao.dropTable(db, ifExists);
        SupplierDao.dropTable(db, ifExists);
        ContactDao.dropTable(db, ifExists);
        LinkDao.dropTable(db, ifExists);
        PhotoDao.dropTable(db, ifExists);
        DictionaryDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(TableDao.class);
        registerDaoClass(SequnceDao.class);
        registerDaoClass(CompanyDao.class);
        registerDaoClass(ZoneDao.class);
        registerDaoClass(CategoryDao.class);
        registerDaoClass(CategoryGroupDao.class);
        registerDaoClass(BrandDao.class);
        registerDaoClass(GenericDao.class);
        registerDaoClass(EngineDao.class);
        registerDaoClass(SerieEnginesDao.class);
        registerDaoClass(ManufacturerDao.class);
        registerDaoClass(SerieDao.class);
        registerDaoClass(PartDao.class);
        registerDaoClass(ProductDao.class);
        registerDaoClass(SupplierDao.class);
        registerDaoClass(ContactDao.class);
        registerDaoClass(LinkDao.class);
        registerDaoClass(PhotoDao.class);
        registerDaoClass(DictionaryDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
