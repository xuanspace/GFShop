package com.topway.fine.model;

import android.os.Parcel;
import android.os.Parcelable;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "Photos".
 */
public class Photo implements Parcelable {

    private Long id;
    private Long userId;
    private Long tableId;
    private Long primaryId;
    private String url;

    public Photo() {
    }

    public Photo(Long id) {
        this.id = id;
    }

    public Photo(Long id, Long userId, Long tableId, Long primaryId, String url) {
        this.id = id;
        this.userId = userId;
        this.tableId = tableId;
        this.primaryId = primaryId;
        this.url = url;
    }

    public void setDefaultValue() {
        if (this.id == null )
           this.id = new Long(0);
        if (this.userId == null )
           this.userId = new Long(0);
        if (this.tableId == null )
           this.tableId = new Long(0);
        if (this.primaryId == null )
           this.primaryId = new Long(0);
        if (this.url == null )
           this.url = "";
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Long getTableId() {
        return tableId;
    }

    public void setTableId(Long tableId) {
        this.tableId = tableId;
    }

    public Long getPrimaryId() {
        return primaryId;
    }

    public void setPrimaryId(Long primaryId) {
        this.primaryId = primaryId;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }


    //Parcelable
    protected Photo (Parcel in) {
        id = in.readLong();
        userId = in.readLong();
        tableId = in.readLong();
        primaryId = in.readLong();
        url = in.readString();
    }

    public static final Creator<Photo> CREATOR = new Creator<Photo>() {
        @Override
        public Photo createFromParcel(Parcel in) {
            return new Photo(in);
        }

        @Override
        public Photo[] newArray(int size) {
            return new Photo[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeLong(id);
        dest.writeLong(userId);
        dest.writeLong(tableId);
        dest.writeLong(primaryId);
        dest.writeString(url);
    }
    //Parcelable END

    //JsonSerializable
    public static Photo fromJson(JSONObject jsonObject) throws JSONException {
        Photo domain = new Photo();

        domain.id = jsonObject.getLong("id");
        domain.userId = jsonObject.getLong("USER_ID");
        domain.tableId = jsonObject.getLong("TABLE_ID");
        domain.primaryId = jsonObject.getLong("PRIMARY_ID");
        domain.url = jsonObject.getString("URL");

        return domain;
    }

    public static String toJson(Photo obj) throws JSONException {
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("id",obj.id);
        jsonObject.put("USER_ID",obj.userId);
        jsonObject.put("TABLE_ID",obj.tableId);
        jsonObject.put("PRIMARY_ID",obj.primaryId);
        jsonObject.put("URL",obj.url);
        return jsonObject.toString();
    }
    //JsonSerializable END

}
