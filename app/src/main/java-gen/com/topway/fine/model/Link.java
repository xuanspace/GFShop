package com.topway.fine.model;

import android.os.Parcel;
import android.os.Parcelable;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSONException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table "Links".
 */
public class Link implements Parcelable {

    private Long id;
    private Long tableId;
    private Long primaryId;
    private Long way;
    private String number;

    public Link() {
    }

    public Link(Long id) {
        this.id = id;
    }

    public Link(Long id, Long tableId, Long primaryId, Long way, String number) {
        this.id = id;
        this.tableId = tableId;
        this.primaryId = primaryId;
        this.way = way;
        this.number = number;
    }

    public void setDefaultValue() {
        if (this.id == null )
           this.id = new Long(0);
        if (this.tableId == null )
           this.tableId = new Long(0);
        if (this.primaryId == null )
           this.primaryId = new Long(0);
        if (this.way == null )
           this.way = new Long(0);
        if (this.number == null )
           this.number = "";
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getTableId() {
        return tableId;
    }

    public void setTableId(Long tableId) {
        this.tableId = tableId;
    }

    public Long getPrimaryId() {
        return primaryId;
    }

    public void setPrimaryId(Long primaryId) {
        this.primaryId = primaryId;
    }

    public Long getWay() {
        return way;
    }

    public void setWay(Long way) {
        this.way = way;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
    }


    //Parcelable
    protected Link (Parcel in) {
        id = in.readLong();
        tableId = in.readLong();
        primaryId = in.readLong();
        way = in.readLong();
        number = in.readString();
    }

    public static final Creator<Link> CREATOR = new Creator<Link>() {
        @Override
        public Link createFromParcel(Parcel in) {
            return new Link(in);
        }

        @Override
        public Link[] newArray(int size) {
            return new Link[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeLong(id);
        dest.writeLong(tableId);
        dest.writeLong(primaryId);
        dest.writeLong(way);
        dest.writeString(number);
    }
    //Parcelable END

    //JsonSerializable
    public static Link fromJson(JSONObject jsonObject) throws JSONException {
        Link domain = new Link();

        domain.id = jsonObject.getLong("id");
        domain.tableId = jsonObject.getLong("TABLE_ID");
        domain.primaryId = jsonObject.getLong("PRIMARY_ID");
        domain.way = jsonObject.getLong("WAY");
        domain.number = jsonObject.getString("NUMBER");

        return domain;
    }

    public static String toJson(Link obj) throws JSONException {
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("id",obj.id);
        jsonObject.put("TABLE_ID",obj.tableId);
        jsonObject.put("PRIMARY_ID",obj.primaryId);
        jsonObject.put("WAY",obj.way);
        jsonObject.put("NUMBER",obj.number);
        return jsonObject.toString();
    }
    //JsonSerializable END

}
